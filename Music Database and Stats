--Show Customers (their customer ID, full names, and country) who are not in the US.
SELECT customerid, firstname, lastname, country
FROM chinook.customers
WHERE country <> 'USA';
--!= or <> can be used interchangeably to say "is not equal to"

--Show Customers from Brazil.
SELECT *
FROM chinook.customers
WHERE country = 'Brazil';

/*Find the Invoices of customers who are from Brazil. 
The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.*/
SELECT cust.firstname, cust.lastname, inv.invoiceid, inv.invoicedate, inv.billingcountry
FROM chinook.customers cust
INNER JOIN chinook.invoices inv
ON cust.customerid = inv.customerid
WHERE cust.country = 'Brazil';

--Show the Employees who are Sales Agents.
SELECT *
FROM chinook.employees
WHERE title = 'Sales Support Agent';

--Show the Employees who are Managers
SELECT *
FROM chinook.employees
WHERE title LIKE '%Manager';

--Find the different billing countries from the Invoice table.
SELECT DISTINCT billingcountry
FROM chinook.invoices
ORDER BY billingcountry;

/*Provide a query that shows the invoices associated with each sales agent. 
The resulting table should include the Sales Agent's full name.*/
SELECT emp.firstname, emp.lastname, inv.invoiceid
FROM chinook.employees emp
INNER JOIN chinook.customers cust ON emp.employeeid = cust.supportrepid
INNER JOIN chinook.invoices inv ON cust.customerid = inv.customerid;

--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT cust.firstname, cust.lastname, cust.country, inv.total, emp.lastname AS 'Sales Agent'
FROM chinook.invoices inv
INNER JOIN chinook.customers cust ON inv.customerid = cust.customerid
INNER JOIN chinook.employees emp ON emp.employeeid = cust.supportrepid;

--How many Invoices were there in 2009?
SELECT COUNT(invoiceid) AS '2009 invoices'
FROM chinook.invoices
WHERE invoicedate LIKE '2009%';
--OR
SELECT COUNT(invoicedate) AS '2009 invoices'
FROM chinook.Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--What are the total sales for 2009?
SELECT SUM(total) AS '2009 sales'
FROM chinook.invoices
WHERE invoicedate LIKE '2009%';

--Write a query that includes the purchased track name with each invoice line ID.
SELECT track.name, inv.invoicelineid
FROM chinook.tracks track
INNER JOIN chinook.invoice_items inv
ON track.trackid = inv.trackid;

--Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT track.name Track, art.name Artist, inv.invoicelineid
FROM chinook.tracks track
INNER JOIN chinook.invoice_items inv ON track.trackid = inv.trackid
INNER JOIN chinook.albums alb ON track.albumid = alb.albumid
INNER JOIN chinook.artists art ON alb.artistid = art.artistid
ORDER BY inv.invoicelineid;

--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT track.name, alb.title AS album, media.name AS mediatype, genre.name AS genre
FROM chinook.tracks track
INNER JOIN chinook.albums alb ON alb.albumid = track.albumid
INNER JOIN chinook.media_types media ON media.mediatypeid = track.mediatypeid
INNER JOIN chinook.genres genre ON genre.genreid = track.genreid
ORDER BY track.trackid;

--Show the total sales made by each sales agent.
SELECT emp.lastname AS 'Sales Agent', SUM(inv.total) AS 'Total Sales'
FROM chinook.invoices inv
INNER JOIN chinook.customers cust ON inv.customerid = cust.customerid
INNER JOIN chinook.employees emp ON emp.employeeid = cust.supportrepid
WHERE emp.title = 'Sales Support Agent'
GROUP BY emp.lastname;
--In this case, you technically don't need the WHERE clause as the supportrepid's for the customers are all sales agent id's

--Which sales agent made the most dollars in sales in 2009?
SELECT emp.lastname AS 'Top Sales Agent', ROUND(SUM(inv.total), 2) AS '2009 Sales'
FROM chinook.invoices inv
INNER JOIN chinook.customers cust ON inv.customerid = cust.customerid
INNER JOIN chinook.employees emp ON emp.employeeid = cust.supportrepid
WHERE emp.title = 'Sales Support Agent'
AND inv.invoicedate LIKE '2009%'
GROUP BY emp.lastname
ORDER BY SUM(inv.total) DESC
LIMIT 1;
